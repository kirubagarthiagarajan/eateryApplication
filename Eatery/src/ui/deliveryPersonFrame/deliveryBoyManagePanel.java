/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.deliveryPersonFrame;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.DeliveryPerson;
import model.Restaurant;
import model.EateryEnterprise;

/**
 *
 * @author HARISH
 */
public class deliveryBoyManagePanel extends javax.swing.JPanel {

    /**
     * Creates new form deliveryBoyManagePanel
     */
    private EateryEnterprise eatery;
    List<DeliveryPerson> a;
    
    public deliveryBoyManagePanel(EateryEnterprise eatery) {
        initComponents();
        this.eatery=eatery;
        a=eatery.getAllDeliveryPerson();
        displayDeliverBoy();
        txtCity.setSelectedItem(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        updatedeliveryboy = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mngdbTable = new javax.swing.JTable();
        searchValue = new javax.swing.JTextField();
        deletedeliveryboy = new javax.swing.JButton();
        confirmUpdate = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tfdbid = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNumber = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        txtCity = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        jPanel2.setBackground(new java.awt.Color(0, 153, 204));

        updatedeliveryboy.setBackground(new java.awt.Color(102, 102, 102));
        updatedeliveryboy.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        updatedeliveryboy.setForeground(new java.awt.Color(255, 255, 255));
        updatedeliveryboy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow.png"))); // NOI18N
        updatedeliveryboy.setText("UPDATE DELIVERY BOY");
        updatedeliveryboy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updatedeliveryboy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updatedeliveryboyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updatedeliveryboyMouseExited(evt);
            }
        });
        updatedeliveryboy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatedeliveryboyActionPerformed(evt);
            }
        });

        mngdbTable.setBackground(new java.awt.Color(255, 255, 0));
        mngdbTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mngdbTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "Id", "City", "PHONE NUMBER", "EMAIL", "ADDRESS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(mngdbTable);

        searchValue.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        searchValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchValueActionPerformed(evt);
            }
        });
        searchValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchValueKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchValueKeyReleased(evt);
            }
        });

        deletedeliveryboy.setBackground(new java.awt.Color(102, 102, 102));
        deletedeliveryboy.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deletedeliveryboy.setForeground(new java.awt.Color(255, 255, 255));
        deletedeliveryboy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/remove-friend.png"))); // NOI18N
        deletedeliveryboy.setText("DELETE DELIVERY BOY");
        deletedeliveryboy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deletedeliveryboy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deletedeliveryboyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deletedeliveryboyMouseExited(evt);
            }
        });
        deletedeliveryboy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletedeliveryboyActionPerformed(evt);
            }
        });

        confirmUpdate.setBackground(new java.awt.Color(102, 102, 102));
        confirmUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        confirmUpdate.setForeground(new java.awt.Color(255, 255, 255));
        confirmUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow.png"))); // NOI18N
        confirmUpdate.setText("Confirm Update");
        confirmUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        confirmUpdate.setEnabled(false);
        confirmUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                confirmUpdateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                confirmUpdateMouseExited(evt);
            }
        });
        confirmUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmUpdateActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("PHONE NUMBER");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("NAME");

        txtName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Search");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("DELIVERY BOY ID");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("City");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("EMAIL");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("ADDRESS");

        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        txtCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BOSTON", "NEW YORK", "VIRGINIA", "NEW JERSEY", "BUFFALO" }));

        jLabel1.setBackground(new java.awt.Color(0, 153, 204));
        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SMART DELIVERY - DELIVERY PERSON MANAGER");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(540, 540, 540)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(deletedeliveryboy))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(updatedeliveryboy))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(94, 94, 94)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tfdbid, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(563, 563, 563)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchValue, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 530, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(717, 717, 717)
                .addComponent(confirmUpdate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deletedeliveryboy)
                    .addComponent(updatedeliveryboy))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tfdbid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(confirmUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void updatedeliveryboyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatedeliveryboyActionPerformed
       int col= 1;
        int row=mngdbTable.getSelectedRow();
        
       
        if(row < 0)
        {
            JOptionPane.showMessageDialog(this, "Select a row to update!");
        }
        else
        {
             int dbId= Integer.parseInt(mngdbTable.getModel().getValueAt(row, col).toString());
             txtName.setEnabled(true);
             txtCity.setEnabled(true);
             txtNumber.setEnabled(true);
             txtEmail.setEnabled(true);
             txtAddress.setEnabled(true);
             confirmUpdate.setEnabled(true);
              
              DeliveryPerson a =eatery.getDeliveryBoyById(dbId);
              txtName.setText(a.getName());
              tfdbid.setText(String.valueOf( a.getStateId()));
              txtCity.setSelectedItem(a.getCity());
              txtNumber.setText(String.valueOf(a.getMobile()));
              txtEmail.setText(a.getEmail());
              txtAddress.setText(a.getAddress());
              
              
        }
    }//GEN-LAST:event_updatedeliveryboyActionPerformed

    private void searchValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchValueActionPerformed

    private void searchValueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchValueKeyPressed
        // TODO add your handling code here:
        search(searchValue.getText());
    }//GEN-LAST:event_searchValueKeyPressed

    private void searchValueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchValueKeyReleased
        // TODO add your handling code here:
        search(searchValue.getText());
    }//GEN-LAST:event_searchValueKeyReleased

    private void deletedeliveryboyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletedeliveryboyActionPerformed
        // TODO add your handling code here:
        int col=1;
        int row=mngdbTable.getSelectedRow();
       

        if (row < 0) {
            JOptionPane.showMessageDialog(this, "You should select atleast 1 row to delete!");
        } else {
             int dbId= Integer.parseInt(mngdbTable.getModel().getValueAt(row, col).toString());
               eatery.deleteDeliveryPerson(dbId);
                a=eatery.getAllDeliveryPerson();
                displayDeliverBoy();
        }
      
        
    }//GEN-LAST:event_deletedeliveryboyActionPerformed

    private void confirmUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmUpdateActionPerformed
        // TODO add your handling code here:
        int col= 1;
        int row=mngdbTable.getSelectedRow();
            int dbId= Integer.parseInt(mngdbTable.getModel().getValueAt(row, col).toString());
        String city=String.valueOf(txtCity.getSelectedItem());
        String phno=txtNumber.getText();
        if(row < 0)
        {
            JOptionPane.showMessageDialog(this, "Select a row to update!");
        }
          String regexPattern = "^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@"
        + "[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$";

        if(txtCity.getSelectedItem()!=null && !txtName.getText().equals("") && !txtEmail.getText().equals("") && !txtAddress.getText().equals("") && !txtNumber.getText().equals(""))
        {
          
            if(!txtName.getText().matches("^[a-zA-Z]+ [a-zA-Z]+$"))
            {
                JOptionPane.showMessageDialog(this, "Enter a Valid Full Name", "Invalid Name", HEIGHT);

            }
            if(!txtNumber.getText().matches("^(1\\s?)?(\\d{3}|\\(\\d{3}\\))[\\s\\-]?\\d{3}[\\s\\-]?\\d{4}$"))
            {
                JOptionPane.showMessageDialog(this, "Enter a Valid Phone Number", "Invalid Phone Number", HEIGHT);

            }
            if(!txtEmail.getText().matches(regexPattern))
            {
                JOptionPane.showMessageDialog(this, "Enter a Valid Email", "Invalid Email", HEIGHT);

            }
            if( txtName.getText().matches("^[a-zA-Z]+ [a-zA-Z]+$") && txtNumber.getText().matches("^(1\\s?)?(\\d{3}|\\(\\d{3}\\))[\\s\\-]?\\d{3}[\\s\\-]?\\d{4}$") && txtEmail.getText().matches(regexPattern))
            {
            eatery.updateDeliveryBoy(dbId,txtName.getText(),city,phno,txtEmail.getText(),txtAddress.getText());
         JOptionPane.showMessageDialog(this, "Delivery Boy updated!");
         displayDeliverBoy();
            }
        }
        else
        {    
        JOptionPane.showMessageDialog(this, "Fill all the details to update the Delivery Person profile");
        }       
    }//GEN-LAST:event_confirmUpdateActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void deletedeliveryboyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletedeliveryboyMouseEntered
        // TODO add your handling code here:
        deletedeliveryboy.setBackground(new Color(255,204,0));
    }//GEN-LAST:event_deletedeliveryboyMouseEntered

    private void deletedeliveryboyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletedeliveryboyMouseExited
        // TODO add your handling code here:
        deletedeliveryboy.setBackground(new Color(102,102,102));
    }//GEN-LAST:event_deletedeliveryboyMouseExited

    private void updatedeliveryboyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatedeliveryboyMouseEntered
        // TODO add your handling code here:
         updatedeliveryboy.setBackground(new Color(255,204,0));
    }//GEN-LAST:event_updatedeliveryboyMouseEntered

    private void updatedeliveryboyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatedeliveryboyMouseExited
        // TODO add your handling code here:
             updatedeliveryboy.setBackground(new Color(102,102,102));
    }//GEN-LAST:event_updatedeliveryboyMouseExited

    private void confirmUpdateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmUpdateMouseEntered
        // TODO add your handling code here:
        confirmUpdate.setBackground(new Color(255,204,0));
    }//GEN-LAST:event_confirmUpdateMouseEntered

    private void confirmUpdateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmUpdateMouseExited
        // TODO add your handling code here:
        confirmUpdate.setBackground(new Color(255,204,0));
    }//GEN-LAST:event_confirmUpdateMouseExited

 private void displayDeliverBoy() 
     {
         
     
         txtName.setEnabled(false);
         txtName.setText("");
         tfdbid.setEnabled(false);
         tfdbid.setText("");
         txtNumber.setEnabled(false);
         txtNumber.setText("");
         txtEmail.setEnabled(false);
         txtEmail.setText("");
         txtAddress.setEnabled(false);
         txtAddress.setText("");
         txtCity.setEnabled(false);
         txtCity.setSelectedItem(null);
         mngdbTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        DefaultTableModel tableModel = (DefaultTableModel) mngdbTable.getModel();
        tableModel.setRowCount(0);
        System.out.print("outside if");
        if (a!=null) {
            System.out.print("outside if");
            for (int i = 0; i < a.size(); i++) {
                DeliveryPerson res = a.get(i);
                Object[] tableRow = new Object[10];
                tableRow[0] = res.getName();
                tableRow[1]= res.getStateId();
                tableRow[2] = res.getCity();
                tableRow[3] = res.getMobile();
                tableRow[4]= res.getEmail();
                tableRow[5] = res.getAddress();
                System.out.println("HIIIIIIII FUNCTION in\n");
                System.out.println(res.getName());
                
                
                tableModel.addRow(tableRow);
                
            //    name,mobile,email,city,password,address,
            }
        }
         
     }

  public void search(String str) {
        DefaultTableModel model = (DefaultTableModel) mngdbTable.getModel();
        TableRowSorter<DefaultTableModel> trs =new TableRowSorter<>(model);
        mngdbTable.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
       }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirmUpdate;
    private javax.swing.JButton deletedeliveryboy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable mngdbTable;
    private javax.swing.JTextField searchValue;
    private javax.swing.JTextField tfdbid;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JComboBox<String> txtCity;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNumber;
    private javax.swing.JButton updatedeliveryboy;
    // End of variables declaration//GEN-END:variables
}
