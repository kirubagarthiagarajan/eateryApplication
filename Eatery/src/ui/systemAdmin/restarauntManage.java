/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui.systemAdmin;

import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author ktkir
 */
public class restarauntManage extends javax.swing.JFrame {

    /**
     * Creates new form restarauntManage
     */
    public restarauntManage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAddRest = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mngCityTable = new javax.swing.JTable();
        textRestId = new javax.swing.JTextField();
        searchValue = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        resetSearch = new javax.swing.JButton();
        deleteCityButton = new javax.swing.JButton();
        confirmUpdate = new javax.swing.JButton();
        updateCityButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        textRestName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        textCityName = new javax.swing.JComboBox<>();
        houseDropdown1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        textCityId1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAddRest.setBackground(new java.awt.Color(255, 255, 0));
        btnAddRest.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAddRest.setText("Add Restaraunt");
        btnAddRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRestActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Restaraunt Id");

        mngCityTable.setBackground(new java.awt.Color(255, 255, 0));
        mngCityTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mngCityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Restaraunt Id", "Restaraunt Name", "City"
            }
        ));
        jScrollPane1.setViewportView(mngCityTable);

        textRestId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        searchValue.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        searchButton.setBackground(new java.awt.Color(255, 255, 0));
        searchButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        searchButton.setText("SEARCH");
        searchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        resetSearch.setBackground(new java.awt.Color(255, 255, 0));
        resetSearch.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        resetSearch.setText("RESET");
        resetSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resetSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetSearchActionPerformed(evt);
            }
        });

        deleteCityButton.setBackground(new java.awt.Color(255, 255, 0));
        deleteCityButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteCityButton.setText("Delete Restaraunt");
        deleteCityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCityButtonActionPerformed(evt);
            }
        });

        confirmUpdate.setBackground(new java.awt.Color(255, 255, 0));
        confirmUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        confirmUpdate.setText("Confirm Update");
        confirmUpdate.setEnabled(false);
        confirmUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmUpdateActionPerformed(evt);
            }
        });

        updateCityButton.setBackground(new java.awt.Color(255, 255, 0));
        updateCityButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        updateCityButton.setText("Update Restaraunt");
        updateCityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCityButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Restaraunt Name");

        textRestName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        textRestName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textRestNameActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("City");

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MANAGE RESTARAUNT PORTAL");

        textCityName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        textCityName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                textCityNameItemStateChanged(evt);
            }
        });
        textCityName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCityNameActionPerformed(evt);
            }
        });

        houseDropdown1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        houseDropdown1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                houseDropdown1ItemStateChanged(evt);
            }
        });
        houseDropdown1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                houseDropdown1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Restaraunt Name");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("City ");

        textCityId1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textCityId1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(houseDropdown1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(confirmUpdate)
                        .addGap(233, 233, 233))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textRestId)
                                    .addComponent(textRestName)
                                    .addComponent(textCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnAddRest, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(361, 361, 361))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 373, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchValue, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetSearch))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(deleteCityButton)
                        .addGap(33, 33, 33)
                        .addComponent(updateCityButton)))
                .addGap(273, 273, 273))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textRestId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textRestName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textCityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btnAddRest)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(resetSearch)
                            .addComponent(searchButton)
                            .addComponent(searchValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteCityButton)
                            .addComponent(updateCityButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textCityId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(houseDropdown1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(confirmUpdate)
                        .addGap(53, 53, 53))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRestActionPerformed
        // TODO add your handling code here:
        if(!textRestName.getText().equals("") && !textRestId.getText().equals(""))
        {
            if(!model.isCityNameUnique(textRestName.getText()))
            {
                JOptionPane.showMessageDialog(this, "City name should be unique!");
            }

            if(!textRestId.getText().matches("[0-9]+"))
            {
                JOptionPane.showMessageDialog(this, "City id should be all numbers!");
            }

            if(!model.isCityIdUnique(textRestId.getText()))
            {
                JOptionPane.showMessageDialog(this, "City ID should be unique!");
            }
            else if(textRestId.getText().matches("[0-9]+") && model.isCityIdUnique(textRestId.getText()) && model.isCityNameUnique(textRestName.getText()))
            {
                model.createCity( textRestName.getText(),textRestId.getText());
                JOptionPane.showMessageDialog(this, "City Created!");
                displayCityDetails();
            }

        }
        else
        JOptionPane.showMessageDialog(this, "Fill all the details to create City");
    }//GEN-LAST:event_btnAddRestActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<City> searchList = new ArrayList<>();
        String searchPhrase = searchValue.getText();
        for (City city : model.getCityDirectory()) {
            if (city.getCity().contains(searchPhrase) ) {
                searchList.add(city);
            }
        }
        if (!searchList.isEmpty()) {
            currentCityList = searchList;
        }
        else
        {
            currentCityList=null;
        }
        displayCityDetails();
    }//GEN-LAST:event_searchButtonActionPerformed

    private void resetSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetSearchActionPerformed
        // TODO add your handling code here:

        searchValue.setText("");
        currentCityList = model.getCityDirectory();
        displayCityDetails();
    }//GEN-LAST:event_resetSearchActionPerformed

    private void deleteCityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCityButtonActionPerformed
        // TODO add your handling code here:
        int col=1;
        int row=mngCityTable.getSelectedRow();
        String cityId=mngCityTable.getModel().getValueAt(row, col).toString();

        if (row < 0) {
            JOptionPane.showMessageDialog(this, "You should select atleast 1 row to delete!");
        } else {
            if(model.getCityById(cityId).getCommunityList().size()>0 )
            {
                JOptionPane.showMessageDialog(this, "This city has communities under it. Delete them first, and then delete this!");

            }else
            {
                model.removeCity(cityId);
                currentCityList=model.getCityDirectory();
                displayCityDetails();

                JOptionPane.showMessageDialog(this, "City Deleted");
            }

        }
    }//GEN-LAST:event_deleteCityButtonActionPerformed

    private void confirmUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmUpdateActionPerformed
        // TODO add your handling code here:
        int col= 1;
        int row=mngCityTable.getSelectedRow();
        String cityId=mngCityTable.getModel().getValueAt(row, col).toString();
        if(!editCityName.getText().equals(""))
        {
            if( model.getCityDirectory().size()>1&&!model.isCityNameUnique(editCityName.getText()))
            {
                JOptionPane.showMessageDialog(this, "City name should be unique!");
            }
            else
            {
                model.updateCity(editCityName.getText(),cityId);
                editCityName.setText("");
                editCityName.setEnabled(false);
                displayCityDetails();
            }
        }
        else
        JOptionPane.showMessageDialog(this, "Fill all the details to update City");
    }//GEN-LAST:event_confirmUpdateActionPerformed

    private void updateCityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCityButtonActionPerformed
        int col= 1;
        int row=mngCityTable.getSelectedRow();
        String cityId=mngCityTable.getModel().getValueAt(row, col).toString();

        if (row < 0) {
            JOptionPane.showMessageDialog(this, "You should select atleast 1 row to update!");
        } else {
            editCityName.setEnabled(true);
            confirmUpdate.setEnabled(true);
            City city= this.model.getCityById(cityId);
            editCityName.setText(String.valueOf(city.getCity()));
        }
    }//GEN-LAST:event_updateCityButtonActionPerformed

    private void textRestNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textRestNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textRestNameActionPerformed

    private void textCityNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_textCityNameItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_textCityNameItemStateChanged

    private void textCityNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textCityNameActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_textCityNameActionPerformed

    private void houseDropdown1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_houseDropdown1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_houseDropdown1ActionPerformed

    private void houseDropdown1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_houseDropdown1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_houseDropdown1ItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(restarauntManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(restarauntManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(restarauntManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(restarauntManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new restarauntManage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRest;
    private javax.swing.JButton confirmUpdate;
    private javax.swing.JButton deleteCityButton;
    private javax.swing.JComboBox<String> houseDropdown1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable mngCityTable;
    private javax.swing.JButton resetSearch;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchValue;
    private javax.swing.JTextField textCityId1;
    private javax.swing.JComboBox<String> textCityName;
    private javax.swing.JTextField textRestId;
    private javax.swing.JTextField textRestName;
    private javax.swing.JButton updateCityButton;
    // End of variables declaration//GEN-END:variables
}
