/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.restaurantFrame;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Restaurant;
import model.EateryEnterprise;
import model.Food;

/**
 *
 * @author ktkir
 */
public class menuManagePanel extends javax.swing.JPanel {

    /**
     * Creates new form menuManagePanel
     */
    private EateryEnterprise eatery;
        private int currentRestarauntId;
    private Restaurant currentRestaraunt;
    private List<Food> currentFoodList;
    public menuManagePanel(EateryEnterprise eatery,int currentRestarauntId) {
        initComponents();
        this.eatery=eatery;
        this.currentRestarauntId=currentRestarauntId;
        this.currentRestaraunt=eatery.getRestaurantById(currentRestarauntId);
        this.currentFoodList=eatery.getFoodListByRestaurant(currentRestarauntId);
        displayFoodTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchValue = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        updateFood = new javax.swing.JButton();
        deleteFood = new javax.swing.JButton();
        btnAddCity = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        confirmUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mngMenuTable = new javax.swing.JTable();
        textFoodName = new javax.swing.JTextField();
        textFoodId = new javax.swing.JTextField();
        textFoodPrice = new javax.swing.JTextField();
        editFoodName = new javax.swing.JTextField();
        editFoodPrice = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 204));

        searchValue.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        searchValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchValueActionPerformed(evt);
            }
        });
        searchValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchValueKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchValueKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Price");

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Menu ");

        updateFood.setBackground(new java.awt.Color(102, 102, 102));
        updateFood.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        updateFood.setForeground(new java.awt.Color(255, 255, 255));
        updateFood.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        updateFood.setText("Update Food");
        updateFood.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updateFoodMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updateFoodMouseExited(evt);
            }
        });
        updateFood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateFoodActionPerformed(evt);
            }
        });

        deleteFood.setBackground(new java.awt.Color(102, 102, 102));
        deleteFood.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteFood.setForeground(new java.awt.Color(255, 255, 255));
        deleteFood.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/trash-can.png"))); // NOI18N
        deleteFood.setText("Delete Food");
        deleteFood.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteFoodMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteFoodMouseExited(evt);
            }
        });
        deleteFood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFoodActionPerformed(evt);
            }
        });

        btnAddCity.setBackground(new java.awt.Color(102, 102, 102));
        btnAddCity.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAddCity.setForeground(new java.awt.Color(255, 255, 255));
        btnAddCity.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/online-order.png"))); // NOI18N
        btnAddCity.setText("Add Food to Menu");
        btnAddCity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAddCityMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAddCityMouseExited(evt);
            }
        });
        btnAddCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCityActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Food Name");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Search");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Food Id");

        confirmUpdate.setBackground(new java.awt.Color(102, 102, 102));
        confirmUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        confirmUpdate.setForeground(new java.awt.Color(255, 255, 255));
        confirmUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/confirmation.png"))); // NOI18N
        confirmUpdate.setText("Confirm Update");
        confirmUpdate.setEnabled(false);
        confirmUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                confirmUpdateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                confirmUpdateMouseExited(evt);
            }
        });
        confirmUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmUpdateActionPerformed(evt);
            }
        });

        mngMenuTable.setBackground(new java.awt.Color(255, 255, 0));
        mngMenuTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mngMenuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food Id", "Food Name", "Price"
            }
        ));
        jScrollPane1.setViewportView(mngMenuTable);

        textFoodName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        textFoodName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFoodNameActionPerformed(evt);
            }
        });

        textFoodId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        textFoodPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        textFoodPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFoodPriceActionPerformed(evt);
            }
        });

        editFoodName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        editFoodName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editFoodNameActionPerformed(evt);
            }
        });

        editFoodPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        editFoodPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editFoodPriceActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Food Name");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Price");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1600, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(editFoodName)
                            .addComponent(editFoodPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchValue, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAddCity)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(30, 30, 30))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(50, 50, 50)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(textFoodName)
                            .addComponent(textFoodId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFoodPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(deleteFood)
                        .addGap(47, 47, 47)
                        .addComponent(updateFood))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(confirmUpdate)))
                .addGap(549, 549, 549))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFoodId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textFoodName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textFoodPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAddCity)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(searchValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteFood)
                    .addComponent(updateFood))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(editFoodName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(editFoodPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(confirmUpdate)
                .addContainerGap(228, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchValueActionPerformed

    private void searchValueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchValueKeyPressed
        // TODO add your handling code here:
        search(searchValue.getText());
    }//GEN-LAST:event_searchValueKeyPressed

    private void searchValueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchValueKeyReleased
        // TODO add your handling code here:
          search(searchValue.getText());
    }//GEN-LAST:event_searchValueKeyReleased
   public void search(String str) {
        DefaultTableModel model = (DefaultTableModel) mngMenuTable.getModel();
        TableRowSorter<DefaultTableModel> trs =new TableRowSorter<>(model);
        mngMenuTable.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
       }
    
    private void updateFoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateFoodActionPerformed
        int col= 0;
        int row=mngMenuTable.getSelectedRow();
        int foodId= Integer.parseInt(mngMenuTable.getModel().getValueAt(row, col).toString());

        if (row < 0) {
            JOptionPane.showMessageDialog(this, "You should select atleast 1 row to update!");
        } else {
            editFoodName.setEnabled(true);
            editFoodPrice.setEnabled(true);
            confirmUpdate.setEnabled(true);
            Food foo =eatery.getFoodById(foodId);
            editFoodName.setText(foo.getName());
            editFoodPrice.setText(String.valueOf(foo.getPrice()));
        }
    }//GEN-LAST:event_updateFoodActionPerformed

    private void deleteFoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFoodActionPerformed
        // TODO add your handling code here:
        int col=0;
        int row=mngMenuTable.getSelectedRow();
        int foodId= Integer.parseInt(mngMenuTable.getModel().getValueAt(row, col).toString());
        Food currentFood= eatery.getFoodById(foodId);
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "You should select atleast 1 row to delete!");
        } 
            else
            {
                eatery.removeFood(currentFood.getRestaurantId(),currentFood.getFoodId());
               
                displayFoodTable();

                JOptionPane.showMessageDialog(this, "City Deleted");
            }

        
    }//GEN-LAST:event_deleteFoodActionPerformed

    private void displayFoodTable() 
     {
         editFoodName.setEnabled(false);
         editFoodPrice.setEnabled(false);
         confirmUpdate.setEnabled(false);
         textFoodId.setText("");
         textFoodName.setText("");
         textFoodPrice.setText("");
         mngMenuTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        DefaultTableModel tableModel = (DefaultTableModel) mngMenuTable.getModel();
        tableModel.setRowCount(0);
        currentFoodList=eatery.getFoodListByRestaurant(currentRestarauntId);
        if (currentFoodList!=null) {
            for (int i = 0; i < currentFoodList.size(); i++) {
                Food fo = currentFoodList.get(i);
                Object[] tableRow = new Object[10];
                tableRow[0] = fo.getFoodId();
                tableRow[1]= fo.getName();
                tableRow[2] = fo.getPrice();
                tableModel.addRow(tableRow);
            }
        }
         
     }
    
    
    
    private void btnAddCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCityActionPerformed
        // TODO add your handling code here:
        if(!textFoodId.getText().equals("") && !textFoodName.getText().equals("") && !textFoodPrice.getText().equals("") )
        {
            if(!textFoodId.getText().matches("[0-9]+"))
            {
                JOptionPane.showMessageDialog(this, "Restaraunt id should be all numbers!");
            }

             if(!textFoodPrice.getText().matches("[0-9]+"))
            {
                JOptionPane.showMessageDialog(this, "Price id should be all numbers!");
            }
             else  if(!eatery.isFoodIdUnique(Integer.parseInt(textFoodId.getText())))
            {
                JOptionPane.showMessageDialog(this, "Food id should be unique!");
            }
            

            else if(textFoodId.getText().matches("[0-9]+")&& textFoodPrice.getText().matches("[0-9]+") && eatery.isFoodIdUnique(Integer.parseInt(textFoodId.getText())))
            {
                eatery.addFoodToRestaurant(textFoodName.getText(), Integer.parseInt(textFoodPrice.getText()) ,currentRestarauntId, Integer.parseInt(textFoodId.getText()));
              
                JOptionPane.showMessageDialog(this, "Food added to Restaraunt's menu!");
                displayFoodTable();
            }

        }
        else
        JOptionPane.showMessageDialog(this, "Fill all the details to create a Restaraunt!");
    }//GEN-LAST:event_btnAddCityActionPerformed

   
         
     
    
    
    private void confirmUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmUpdateActionPerformed
        // TODO add your handling code here:
        int col= 0;
        int row=mngMenuTable.getSelectedRow();
        int foodId= Integer.parseInt(mngMenuTable.getModel().getValueAt(row, col).toString());
        if(!editFoodName.getText().equals("") && !editFoodPrice.getText().equals(""))
        {
            eatery.updatefood(currentRestarauntId,foodId,editFoodName.getText(), Integer.parseInt(editFoodPrice.getText()));
//            eatery.updateRestaraunt(restarauntId, editRestarauntName.getText(), editCity.getSelectedItem().toString());
            editFoodName.setText("");
            editFoodName.setEnabled(false);
            editFoodPrice.setText("");
            editFoodPrice.setEnabled(false);
            displayFoodTable();

        }
        else
        JOptionPane.showMessageDialog(this, "Fill all the details to update Food");
    }//GEN-LAST:event_confirmUpdateActionPerformed

    private void textFoodNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFoodNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFoodNameActionPerformed

    private void textFoodPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFoodPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFoodPriceActionPerformed

    private void editFoodNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editFoodNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editFoodNameActionPerformed

    private void editFoodPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editFoodPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editFoodPriceActionPerformed

    private void btnAddCityMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddCityMouseExited
        // TODO add your handling code here:
        btnAddCity.setBackground(new Color(102,102,102));
    }//GEN-LAST:event_btnAddCityMouseExited

    private void btnAddCityMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddCityMouseEntered
        // TODO add your handling code here:
         btnAddCity.setBackground(new Color(255,204,0));

    }//GEN-LAST:event_btnAddCityMouseEntered

    private void deleteFoodMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteFoodMouseEntered
        // TODO add your handling code here:
        deleteFood.setBackground(new Color(255,204,0));

    }//GEN-LAST:event_deleteFoodMouseEntered

    private void deleteFoodMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteFoodMouseExited
        // TODO add your handling code here:
        deleteFood.setBackground(new Color(102,102,102));

    }//GEN-LAST:event_deleteFoodMouseExited

    private void updateFoodMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateFoodMouseEntered
        // TODO add your handling code here:
        updateFood.setBackground(new Color(255,204,0));
    }//GEN-LAST:event_updateFoodMouseEntered

    private void updateFoodMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateFoodMouseExited
        // TODO add your handling code here:
        updateFood.setBackground(new Color(102,102,102));
    }//GEN-LAST:event_updateFoodMouseExited

    private void confirmUpdateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmUpdateMouseExited
        // TODO add your handling code here:
        confirmUpdate.setBackground(new Color(102,102,102));

    }//GEN-LAST:event_confirmUpdateMouseExited

    private void confirmUpdateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmUpdateMouseEntered
        // TODO add your handling code here:
        confirmUpdate.setBackground(new Color(255,204,0));

    }//GEN-LAST:event_confirmUpdateMouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCity;
    private javax.swing.JButton confirmUpdate;
    private javax.swing.JButton deleteFood;
    private javax.swing.JTextField editFoodName;
    private javax.swing.JTextField editFoodPrice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable mngMenuTable;
    private javax.swing.JTextField searchValue;
    private javax.swing.JTextField textFoodId;
    private javax.swing.JTextField textFoodName;
    private javax.swing.JTextField textFoodPrice;
    private javax.swing.JButton updateFood;
    // End of variables declaration//GEN-END:variables
}
