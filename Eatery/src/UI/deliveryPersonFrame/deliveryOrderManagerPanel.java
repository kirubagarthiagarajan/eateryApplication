/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.deliveryPersonFrame;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import model.DeliveryPerson;
import model.EateryEnterprise;
import model.Order;

/**
 *
 * @author ktkir
 */
public class deliveryOrderManagerPanel extends javax.swing.JPanel {

    /**
     * Creates new form deliveryOrderManagerPanel
     */
    EateryEnterprise eatery;
    List<Order> currentOrderList;
    ArrayList<DeliveryPerson> deliveryPersonList;
    int orderId;
    public deliveryOrderManagerPanel(EateryEnterprise eatery) {
        initComponents();
        this.eatery=eatery;
        this.currentOrderList=eatery.getOrdersThatReadyForDelivery();
        JOptionPane.showMessageDialog(this, "orderLength"+currentOrderList.size());
        populateOrders();
    }
    public void populateOrders()
    {
         tblOrders.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        DefaultTableModel tableModel = (DefaultTableModel) tblOrders.getModel();
        tableModel.setRowCount(0);
        //System.out.print("outside if");
        if (currentOrderList!=null) {
            System.out.print("outside if");
            for (int i = 0; i < currentOrderList.size(); i++) {
                Order o = currentOrderList.get(i);
                Object[] tableRow = new Object[10];
                tableRow[0] = o.getOrderId();
                if(o.getRestaurantId()==-1)
                {
                     tableRow[1]= "GROCERY STORE BOSTON";
                        tableRow[2] = o.getCustomerId();
                tableRow[3] = o.getCity();
                tableModel.addRow(tableRow);
                }
                else
                {
                    tableRow[1]= o.getRestaurantId();
                     tableRow[2] = o.getCustomerId();
                tableRow[3] = o.getCity();
                tableModel.addRow(tableRow);
                }
            }
        }
    }
    public void populateDeliveryBoyTable()
    {
        tblDeliveryBoy.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        DefaultTableModel tableModel = (DefaultTableModel) tblDeliveryBoy.getModel();
        tableModel.setRowCount(0);
        //System.out.print("outside if");
        if (deliveryPersonList!=null) {
            //System.out.print("outside if");
            for (int i = 0; i < deliveryPersonList.size(); i++) {
                DeliveryPerson d = deliveryPersonList.get(i);
                Object[] tableRow = new Object[10];
                tableRow[0] = d.getStateId();
                tableRow[1]=d.getName();
                tableRow[2] =d.getCity();
                tableRow[3] = d.getAddress();
                tableModel.addRow(tableRow);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        getFreeDelivery = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDeliveryBoy = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        assignOrder = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Delivery Person Available");

        jLabel2.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Manage Menu ");

        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Order Id", "Restaraunt/Grocery Store Id", "Customer Id", "City"
            }
        ));
        jScrollPane1.setViewportView(tblOrders);

        getFreeDelivery.setText("Get Free Delivery Person in this City");
        getFreeDelivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getFreeDeliveryActionPerformed(evt);
            }
        });

        tblDeliveryBoy.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Delivery Person Id", "Name", "City", "Address"
            }
        ));
        jScrollPane2.setViewportView(tblDeliveryBoy);
        if (tblDeliveryBoy.getColumnModel().getColumnCount() > 0) {
            tblDeliveryBoy.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Orders waiting to be delivered");

        assignOrder.setText("Assign Order");
        assignOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 970, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(getFreeDelivery)
                        .addGap(364, 364, 364))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(392, 392, 392))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(192, 192, 192))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(403, 403, 403))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(assignOrder)
                        .addGap(430, 430, 430))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(getFreeDelivery)
                .addGap(50, 50, 50)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(assignOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(140, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void getFreeDeliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getFreeDeliveryActionPerformed
        // TODO add your handling code here:
         int col= 0;
        int row=tblOrders.getSelectedRow();
        
              if(row < 0)
        {
            JOptionPane.showMessageDialog(this, "Select a order to retrieve delivery personnel!");
        }
        else
           {
        orderId= Integer.parseInt(tblOrders.getModel().getValueAt(row, col).toString());
        Order currentOrder=eatery.getOrderWithOrderId(orderId);
       
         this.deliveryPersonList=(ArrayList<DeliveryPerson>) eatery.getDeliveryBoyThatAreFreeInSameCity(currentOrder.getCity());
         populateDeliveryBoyTable();
        
           }
        
    }//GEN-LAST:event_getFreeDeliveryActionPerformed

    private void assignOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignOrderActionPerformed
        // TODO add your handling code here:
         int col= 0;
        int row=tblDeliveryBoy.getSelectedRow();
           if(row < 0)
        {
            JOptionPane.showMessageDialog(this, "Select a delivery boy to assign order!");
        }
        else
           {
               int deliveryPersonId= Integer.parseInt(tblDeliveryBoy.getModel().getValueAt(row, col).toString());
        String deliveryPersonName= tblDeliveryBoy.getModel().getValueAt(row, 1).toString();
        //Order currentOrder=eatery.getOrderWithOrderId(orderId);
  
       
             JOptionPane.showMessageDialog(this, "Assigned is "+eatery.assignOrderToDeliveryBoy(orderId,deliveryPersonId) );
            
        eatery.assignOrderToDeliveryBoy(orderId,deliveryPersonId);
        JOptionPane.showMessageDialog(this, "Order assigned to"+deliveryPersonName );
        this.currentOrderList=eatery.getOrdersThatReadyForDelivery();
        this.deliveryPersonList.clear();
       populateOrders();
       populateDeliveryBoyTable();
        
           }
        
    }//GEN-LAST:event_assignOrderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignOrder;
    private javax.swing.JButton getFreeDelivery;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDeliveryBoy;
    private javax.swing.JTable tblOrders;
    // End of variables declaration//GEN-END:variables

   
}
